import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import BlogItem from "../components/BlogItem";
import PageTitle from "../components/PageTitle";
import ProductItem from "../components/ProductItem";
import { FeaturedBlogsType, ProductType } from "../type/type";


interface Props {
  dataProducts: ProductType[]
  dataBlogs: FeaturedBlogsType[]
}

const Search: NextPage<Props> = ({dataBlogs,dataProducts}) => {
  return (
    <>
      <Head>
        <title>Store - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title="Search"/>

      <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container">
          {/* blogs  */}
          <>
           {
            dataBlogs.length > 0 && (<h2 className="mb-5">Blogs</h2>)
           }
            <div className="row isotope-grid">
              {/* blog skeleton - search result */}
              <div className="col-4">
                {
                  dataBlogs.map((blog) => {
                    return <BlogItem key={blog.id} {...blog}  />
                  })
                }
              </div>
              {/* !! */}
            </div>
          </>

          {/* products */}
          <>
            {
              dataProducts.length > 0 && (<h2 className="mb-5">Products</h2>)
            }
            <div className="row isotope-grid">
              {/* product skeleton */}
              {
                dataProducts.map((product) => {
                  return <ProductItem key={product.id} {...product} />
                })
              }
              {/* !! */}
            </div>
          </>
        </div>
      </div>
    </>
  );
};

export default Search;

export const getServerSideProps: GetServerSideProps = async ({query}) => {

  let dataBlogs: FeaturedBlogsType[] = []
  let dataProducts: ProductType[] = []
  if(query.q){
    const resBlogs = await fetch(`http://localhost:5001/blogs?q=${query.q}`)
    const resProducts = await fetch(`http://localhost:5001/products?q=${query.q}`)

    dataBlogs = await resBlogs.json()
    dataProducts = await resProducts.json()
  }
  
  return {
    props: {
      dataBlogs:dataBlogs,
      dataProducts:dataProducts
    }
  }
}
